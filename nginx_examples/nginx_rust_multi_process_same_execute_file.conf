# 演示如何让多个进程共用一个Rust可执行文件，每个进程管一个国家的请求

server {
    listen 80;
    server_name api.example.com;
    charset utf-8;

    location /country_a {
        proxy_pass http://country_a_server;
        proxy_set_header X-Forwarded-Proto https;
        proxy_redirect default;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $http_host;
        proxy_next_upstream http_502 http_504 error timeout invalid_header;
    }

    location /country_b {
        proxy_pass http://country_b_server;
        proxy_set_header X-Forwarded-Proto https;
        proxy_redirect default;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $http_host;
        proxy_next_upstream http_502 http_504 error timeout invalid_header;
    }

}

upstream country_a_server {
    server localhost:8080;
}

upstream country_b_server {
    server localhost:8081;
}

# Rust重启脚本示例，所有进程共用一个可执行文件，通过环境变量区分每个进程负责管理哪个国家的请求以及运行的端口号
# source ~/.cargo/env
# cargo build --release
# awk解释: FNR表示只打印第二行，print $2表示只打印第二列
# 不能用 kill ... && restart 的语句，否则kill不成功的话 &&后面的语句不会被执行
# 不能用 > log，要用 >> log，否则重启服务器时会把上次的log情况掉
# kill -9 "$(sudo lsof -i:8080 | awk 'FNR == 2 {print $2}')"
# COUNTRY=a PORT=8080 nohup cargo run --release >> log/country_a.log &
# kill -9 "$(sudo lsof -i:8081 | awk 'FNR == 2 {print $2}')"
# COUNTRY=b PORT=8081 nohup cargo run --release >> log/country_b.log &
